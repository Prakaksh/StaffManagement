//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCS.StaffManagement
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StaffManagementDBEntities : DbContext
    {
        public StaffManagementDBEntities()
            : base("name=StaffManagementDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CustomerDetail> CustomerDetails { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<MstCountry> MstCountries { get; set; }
        public virtual DbSet<MstState> MstStates { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<RoleType> RoleTypes { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<InovoiceDetail> InovoiceDetails { get; set; }
    
        public virtual int Usp_OrganizationInsertUpdate(Nullable<System.Guid> organizationName, string gSTIN, string eSCINO, string ePFNO, string organizationAddr1, string organizationAddr2, Nullable<int> state, string city, string contactNO, string mobileNO, string emailID, string invoicePrefix)
        {
            var organizationNameParameter = organizationName.HasValue ?
                new ObjectParameter("OrganizationName", organizationName) :
                new ObjectParameter("OrganizationName", typeof(System.Guid));
    
            var gSTINParameter = gSTIN != null ?
                new ObjectParameter("GSTIN", gSTIN) :
                new ObjectParameter("GSTIN", typeof(string));
    
            var eSCINOParameter = eSCINO != null ?
                new ObjectParameter("ESCINO", eSCINO) :
                new ObjectParameter("ESCINO", typeof(string));
    
            var ePFNOParameter = ePFNO != null ?
                new ObjectParameter("EPFNO", ePFNO) :
                new ObjectParameter("EPFNO", typeof(string));
    
            var organizationAddr1Parameter = organizationAddr1 != null ?
                new ObjectParameter("OrganizationAddr1", organizationAddr1) :
                new ObjectParameter("OrganizationAddr1", typeof(string));
    
            var organizationAddr2Parameter = organizationAddr2 != null ?
                new ObjectParameter("OrganizationAddr2", organizationAddr2) :
                new ObjectParameter("OrganizationAddr2", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var contactNOParameter = contactNO != null ?
                new ObjectParameter("ContactNO", contactNO) :
                new ObjectParameter("ContactNO", typeof(string));
    
            var mobileNOParameter = mobileNO != null ?
                new ObjectParameter("MobileNO", mobileNO) :
                new ObjectParameter("MobileNO", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var invoicePrefixParameter = invoicePrefix != null ?
                new ObjectParameter("InvoicePrefix", invoicePrefix) :
                new ObjectParameter("InvoicePrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_OrganizationInsertUpdate", organizationNameParameter, gSTINParameter, eSCINOParameter, ePFNOParameter, organizationAddr1Parameter, organizationAddr2Parameter, stateParameter, cityParameter, contactNOParameter, mobileNOParameter, emailIDParameter, invoicePrefixParameter);
        }
    }
}
